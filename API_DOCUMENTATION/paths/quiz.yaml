paths:
  /api/quiz/request:
    post:
      tags: [Quiz]
      summary: Request a customized quiz
      description: Request a quiz with subject, topic, marks, time, and difficulty. Missing values default to recommended.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [subject, topic, marks, time]
              properties:
                subject:
                  type: string
                topic:
                  type: string
                marks:
                  type: integer
                time:
                  type: integer
                  description: Total duration (minutes)
                difficulty:
                  type: string
                  enum: [Easy, Medium, Hard]
      responses:
        '200':
          description: Quiz request accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  quizId:
                    type: string
                  status:
                    type: string
                    example: Submitted
        '400':
          description: Invalid or incomplete parameters
        '401':
          description: Unauthorized

  /api/quiz/{quizId}:
    get:
      tags: [Quiz]
      summary: Fetch quiz questions
      description: Retrieve generated questions for the requested quiz session
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: quizId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Quiz fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  quizId:
                    type: string
                  subject:
                    type: string
                  topic:
                    type: string
                  questions:
                    type: array
                    items:
                      $ref: '#/components/schemas/QuizQuestion'
        '404':
          description: Quiz not found
        '401':
          description: Unauthorized

  /api/quiz/{quizId}/submit:
    post:
      tags: [Quiz]
      summary: Submit quiz answers
      description: Student submits answers before or at timeout.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: quizId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [answers]
              properties:
                answers:
                  type: array
                  items:
                    type: object
                    properties:
                      questionId:
                        type: string
                      selectedOptions:
                        type: array
                        items:
                          type: string
      responses:
        '200':
          description: Submission successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Submitted
        '400':
          description: Invalid answers
        '401':
          description: Unauthorized
        '404':
          description: Quiz not found

  /api/quiz/{quizId}/result:
    get:
      tags: [Quiz]
      summary: Get quiz results and feedback
      description: View score, correct/incorrect answers, hints and dashboard analytics.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: quizId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Result summary returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  score:
                    type: number
                  total:
                    type: number
                  correctAnswers:
                    type: array
                    items:
                      type: string
                  incorrectAnswers:
                    type: array
                    items:
                      type: string
                  explanations:
                    type: array
                    items:
                      type: object
                      properties:
                        questionId:
                          type: string
                        explanation:
                          type: string
                        hint:
                          type: string
                  analytics:
                    type: object
                    properties:
                      strengthTopics:
                        type: array
                        items: { type: string }
                      weakTopics:
                        type: array
                        items: { type: string }
                      timeTaken:
                        type: string
                        example: "17 minutes"
        '401':
          description: Unauthorized
        '404':
          description: Result not found
