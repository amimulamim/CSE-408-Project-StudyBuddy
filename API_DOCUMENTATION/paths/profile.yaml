paths:
  /profile/minimal:
    get:
      tags:
        - Profile
      summary: View Minimal Profile
      description: Returns username, photo URL, and current plan.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully fetched minimal profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  photoUrl:
                    type: string
                  currentPlan:
                    type: string

  /profile/detail:
    get:
      tags:
        - Profile
      summary: View Detailed Profile
      description: Returns detailed user profile.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully fetched detailed profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'

  /profile/edit:
    patch:
      tags:
        - Profile
      summary: Edit Profile
      description: Update any fields from the detailed profile.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
              properties:
                username:
                  type: string
                photoUrl:
                  type: string
                currentPlan:
                  type: string
                location:
                  type: string
                occupation:
                  type: string
                institution:
                  type: string
                studyDomain:
                  type: string
                interests:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Profile updated successfully

  /profile/avatar:
    put:
      tags:
        - Profile
      summary: Upload Profile Photo
      description: Upload a new profile photo/avatar. Accepts image files (JPEG, PNG, GIF, WebP) up to 5MB.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
                  description: Image file for the user's avatar
              required:
                - avatar
      responses:
        '200':
          description: Profile photo updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  avatar_url:
                    type: string
                    description: Public URL of the uploaded avatar
                    example: "https://storage.googleapis.com/bucket/avatars/1234567890_abc123.jpg"
                  message:
                    type: string
                    example: "Profile photo updated successfully"
        '400':
          description: Invalid file type or size
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Invalid file type. Allowed types: image/jpeg, image/jpg, image/png, image/gif, image/webp"
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Rate limit exceeded. Please try again later."
        '500':
          description: Server error during upload or database update
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Failed to upload avatar or update database"

  /progress:
    get:
      tags:
        - Progress
      summary: View Progress
      description: Fetch user's quiz results using pagination.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          required: true
        - in: query
          name: size
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: List of quiz results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuizResult'

  /contents/generated:
    get:
      tags:
        - Content
      summary: Get Generated Contents
      description: Fetch AI-generated contents with pagination.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          required: true
        - in: query
          name: size
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: List of generated contents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContentItem'

  /stats/spent-time:
    get:
      tags:
        - Analytics
      summary: View Time Spent
      description: Returns time spent by the user within the given time range.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: start
          schema:
            type: string
            format: date-time
          required: true
        - in: query
          name: end
          schema:
            type: string
            format: date-time
          required: true
      responses:
        '200':
          description: Time spent data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                    timeSpent:
                      type: number
                      format: float
                      description: Time spent in hours
  /notifications:
    get:
      tags: [Notification]
      summary: Get User Notifications
      description: Retrieve paginated notifications for the authenticated user.
      security: [ { bearerAuth: [] } ]
      parameters:
        - in: query
          name: offset
          required: true
          schema: { type: integer }
        - in: query
          name: size
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Notification' }

  /notifications/{notificationId}:
    put:
      tags: [Notification]
      summary: Mark Notification as Read
      description: Mark a specific notification as read or update its status.
      security: [ { bearerAuth: [] } ]
      parameters:
        - in: path
          name: notificationId
          required: true
          schema: { type: string }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                read: { type: boolean }
      responses:
        '200':
          description: Notification updated
