name: CI pipeline

on:
  pull_request:
    branches:
      - main
    types: [reopened, synchronize, opened]
  push:
    branches:
      - main

jobs:
  backend_pipeline:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests with coverage
      run: |
        mkdir coverage_reports
        coverage run -m pytest
        coverage xml

    - name: Clean up .coverage if needed
      run: rm -f .coverage

    - name: Upload coverage report artifact (optional)
      uses: actions/upload-artifact@v4
      with:
        name: backend-coverage-report
        path: backend/coverage_reports/coverage.xml

  frontend_pipeline:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # or your project's Node version

      - name: Install dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm run test

      - name: Upload coverage report (optional)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: frontend/coverage_reports/lcov.info

  sonarcloud-scan:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: [backend_pipeline, frontend_pipeline]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create paths for coverage reports
        run: |
          mkdir -p backend/coverage_reports
          mkdir -p frontend/coverage_reports
      
      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage-report
          path: backend/coverage_reports

      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage-report
          path: frontend/coverage_reports
          
      - name: Check if coverage.xml exists
        run: |
          if [ -f backend/coverage_reports/coverage.xml ]; then
            echo "✅ coverage.xml found."
          else
            echo "❌ coverage.xml is missing!"
            exit 1
          fi


      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}